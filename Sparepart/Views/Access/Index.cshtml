@model Sparepart.Models.masterrole
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Master Role
    </h1>
</section>

<section class="content container-fluid">
    @*Edit*@
    @(Html.Kendo().Window()
                           .Name("update")
                           .Title("Edit Role")
                           .Content(

                        @<text>
                            <form action="/Access/Update" method="post">
                                <ul class="fieldlist">
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(m => m.RoleID)
                                    <li>
                                        @Html.Label("Nama Role")
                                        @Html.Kendo().TextBoxFor(m => m.NamaRole).Name("nama").HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Role", required = "required", validationmessage = "Input Role" })
                                    </li>

                                    <li>
                                        @(Html.Kendo().Grid<Sparepart.Models.hakaks>()

                                                                                .Name("EditGrid")
                                                                                .Columns(columns =>
                                                                                {
                                                                                        columns.Bound(p => p.AksesID)
                                                .HeaderTemplate("<input id='checkAllEdit' class='chkbx' type='checkbox' />")
                                                .ClientTemplate("<input id='checkItem' class='chkbxq' type='checkbox' name='AksesIDs' value='#= AksesID #'/>")
                                                .Sortable(false)
                                                .Filterable(false)
                                                .Width(30);
                                                columns.Bound(p => p.NamaMenu).Width(140);
                                            })
                                        .ToolBar(toolbar =>
                                        {
                                                toolbar.Template("Pilih Akses");
                                            }
                                        )
                                        .Sortable()
                                        .Pageable(pageable => pageable
                                        .Input(true)
                                        .Numeric(true)
                                        .Info(true)
                                        .PreviousNext(true)
                                        .Refresh(true)
                                        .ButtonCount(5)
                                        )
                                        .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Model(model => model.Id(p => p.AksesID))
                                        .Read(read => read.Action("Access_Read", "Access"))
                                        )

                                        )
                                    </li>
                                    <li>
                                        <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left;" value="Save" type="submit">
                                    </li>
                                </ul>
                            </form>
                        </text>)
                                       .Visible(false)
                                       .Modal(true)
                                       .Draggable()
                                       .Resizable()
                                       .Width(600)
                                       .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                       .Events(ev => ev.Close("onClose"))
    )


    @*DETAIL*@
    @(Html.Kendo().Window()
                    .Name("detail")
                    .Title("Detail Role")
                    .Content(

                    @<text>
                        <ul class="fieldlist">

                            <li>
                                @Html.Label("Nama Role")
                                @Html.DisplayFor(m => m.NamaRole)
                            </li>

                            <li>
                                @(Html.Kendo().Grid((IEnumerable<Sparepart.Models.aks>)ViewBag.Akses) //Bind the grid to ViewBag.Products
                                                      .Name("DetailGrid")
                                                      .Columns(columns =>
                                                      {
                                                                          columns.ForeignKey(p => p.AksesID, (System.Collections.IEnumerable)ViewData["Menu"], "AksesID", "NamaMenu")
                                                             .Title("Menu").Width(200);
                                                                      })
                                                      .Pageable() //Enable the paging.
                                                      .Sortable() //Enable the sorting.
                                )
                            </li>
                        </ul>
                    </text>)
                            .Visible(false)
                            .Modal(true)
                            .Draggable()
                            .Resizable()
                            .Width(600)
                            .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                            .Events(ev => ev.Close("onClose"))
    )

    @*CREATE*@
    @(Html.Kendo().Window()
                    .Name("window")
                    .Title("Tambahkan Role")
                    .Content(

                    @<text>
                        <form action="/Access/CreateAccess" method="post">
                            <ul class="fieldlist">
                                @Html.AntiForgeryToken()
                                <li>
                                    @Html.Label("Nama Role")
                                    @Html.Kendo().TextBoxFor(m => m.NamaRole).Name("nama").HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Role", required = "required", validationmessage = "Input Role" })
                                </li>
                                <li>
                                    @(Html.Kendo().Grid<Sparepart.Models.hakaks>()

                                                            .Name("CreateGrid")
                                                            .Columns(columns =>
                                                            {
                                                                                    columns.Bound(p => p.AksesID)
                                                        .HeaderTemplate("<input id='checkAllCreate' class='chkbx' type='checkbox'/>")
                                                        .ClientTemplate("<input id='checkItem' class='chkbxq' type='checkbox' name='AksesIDs' value='#= AksesID #'/>")
                                                        .Sortable(false)
                                                        .Filterable(false)
                                                        .Width(30);
                                                                                    columns.Bound(p => p.NamaMenu).Width(140);
                                                                                })
                                                            .ToolBar(toolbar =>
                                                            {
                                                                                    toolbar.Template("Pilih Akses");
                                                                                }
                                                            )
                                                            .Sortable()
                                                            .Pageable(pageable => pageable
                                                            .Input(true)
                                                            .Numeric(true)
                                                            .Info(true)
                                                            .PreviousNext(true)
                                                            .Refresh(true)
                                                            .ButtonCount(5)
                                                            )
                                                            .DataSource(dataSource => dataSource
                                                            .Ajax()
                                                            .Model(model => model.Id(p => p.AksesID))
                                                            .Read(read => read.Action("Access_Read", "Access"))
                                                            )

                                    )
                                </li>
                                <li>
                                    <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left;" value="Save" type="submit">
                                </li>
                            </ul>
                        </form>
                    </text>)
                            .Visible(false)
                            .Modal(true)
                            .Draggable()
                            .Resizable()
                            .Width(600)
                            .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                            .Events(ev => ev.Close("onClose"))
    )

    @(Html.Kendo().Grid<Sparepart.Models.masterrole>()

                                                                .Name("MasterGrid")
                                                                .Columns(columns =>
                                                                {
                                                                    columns.Bound(m => m.NamaRole);
                                                                    columns.Command(commands =>
                                                                    {
                                                                        commands.Destroy();
                                                                        commands.Custom("Detail").Click("ShowDetails");
                                                                        commands.Custom("Edit").Click("EditColumn");
                                                                    }).Title("Commands").Width(300);
                                                                })
                                                                .ToolBar(toolbar =>
                                                                {
                                                                    toolbar.Template(@<text>@(Html.Kendo().Button()
                    .Name("textButton")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Tambahkan Role")) </text>);
                                                                        }
                    )
                    .Sortable()
                    .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(true)
                    .Info(true)
                    .PreviousNext(true)
                    .Refresh(true)
                    .ButtonCount(5)
                    )
                    .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model => model.Id(p => p.RoleID))
                    .Read(read => read.Action("Roles_Read", "Role"))
                    .Destroy(update => update.Action("Destroy", "Access"))
                    )

    )
    @*@(Html.Kendo().Grid<Sparepart.Models.aks>()

                .Name("Grid")
                .Columns(columns =>
                {
                    columns.ForeignKey(p => p.RoleID, (System.Collections.IEnumerable)ViewData["Role"], "RoleID", "NamaRole")
            .Title("Role").Width(200);
                    columns.ForeignKey(p => p.AksesID, (System.Collections.IEnumerable)ViewData["Akses"], "AksesID", "NamaMenu")
           .Title("Akses").Width(200);
                    columns.Command(commands =>
                    {
                        commands.Destroy();
                    }).Title("Commands").Width(200);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template(@<text>@(Html.Kendo().Button()
        .Name("textButton")
        .HtmlAttributes(new { type = "button" })
        .Content("Tambahkan Role")) </text>);
            }
            )
            .Sortable()
            .Pageable(pageable => pageable
            .Input(true)
            .Numeric(true)
            .Info(true)
            .PreviousNext(true)
            .Refresh(true)
            .ButtonCount(5)
            )
            .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.ID))
            .Read(read => read.Action("Read", "Access"))
            .Destroy(update => update.Action("Destroy", "Access"))
            )

        )*@
</section>

<style>
    .fieldlist {
        margin: 0 0 -2em;
        padding: 0;
    }

        .fieldlist li {
            list-style: none;
            padding-bottom: 2em;
        }

        .fieldlist label {
            display: block;
            padding-bottom: 1em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }
</style>

@section Scripts
{
    <script type="text/javascript">

        $(function () {
            $("#window").data("kendoWindow").close();
            $("#detail").data("kendoWindow").close();
            $("#update").data("kendoWindow").close();
        });

        function onClose() {
            $("#textButton").show();
            $("#ShowDetails").show();
            $("#EditColumn").show();
        }

        $(document).ready(function () {
            $("#textButton").bind("click", function () {
                $("#window").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
        });

        $("#checkAllCreate").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });

        $("#checkAllEdit").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });

        function ShowDetails(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#MasterGrid").data("kendoGrid");
            var datsa = grid.dataItem(row);
            var pId = datsa.RoleID;



            var myWin = $("#detail").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Detail Role",
                content: {
                    url: '@Url.Action("RoleDetail", "Window")',
                    data: { RoleID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function EditColumn(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#MasterGrid").data("kendoGrid");
            var datsa = grid.dataItem(row);
            var pId = datsa.RoleID;



            var myWin = $("#update").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Update Role",
                content: {
                    url: '@Url.Action("RoleEdit", "Window")',
                    data: { RoleID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function onGridDataBound(e) {
            $('#masterrole script').appendTo(document.body);
            $('#masterakses script').appendTo(document.body);
        }
    </script>
    <script type="text/x-kendo-template" id="template">
        <div id="details-container">

        </div>
    </script>
}
     @*.HeaderTemplate("<input id='checkAllCreate' class='chkbx' type='checkbox' onclick='ToggleChkBox(this);' />")
                                                    .ClientTemplate("<input id='checkItem' onclick='grdChkBoxClick(this);' class='chkbxq' type='checkbox' name='AksesIDs' value='#= AksesID #' />")*@
