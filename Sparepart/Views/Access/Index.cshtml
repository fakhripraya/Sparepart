@model Sparepart.Models.CreateRoleViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <h1>
        Master Role
    </h1>
</section>

<section class="content container-fluid">

    <div id="modalWindow">
        <h3 class="text-center">Delete this record?</h3>
        <div class="pull-left">
            <button id="yes" class="k-button">Yes</button>
        </div>
        <div class="pull-right">
            <button id="no" class="k-button">No</button>
        </div>
    </div>

    @*Edit*@
    @(Html.Kendo().Window()
        .Name("update")
        .Title("Edit Role")
        .Content(

        @<text>
            <form action="/Access/Update" method="post" id="EditFrm" onsubmit="return check (this)">
                <ul class="fieldlist">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.RoleID)
                    <li>
                        @Html.Label("Nama Role")
                        @Html.Kendo().TextBoxFor(m => m.NamaRole).Name("nama").HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Role", required = "required", validationmessage = "Input Role" })
                    </li>

                    <li>
                        @(Html.Kendo().Grid<Sparepart.Models.hakaks>()
                            .Name("EditGrid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.AksesID)
                            .HeaderTemplate("<input id='checkAllEdit' class='chkbx' type='checkbox' />")
                            .ClientTemplate("<input id='checkItem' class='chkbxq' type='checkbox' name='AksesIDs' value='#= AksesID #'/>")
                            .Sortable(false)
                            .Filterable(false)
                            .Width(30);
                                columns.Bound(p => p.NamaMenu).Width(140);
                                    })
                            .ToolBar(toolbar =>
                            {
                                toolbar.Template("Pilih Akses");
                                    }
                            )
                            .Sortable()
                            .Scrollable()
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .Model(model => model.Id(p => p.AksesID))
                            .Read(read => read.Action("Access_Read", "Access"))
                            )

                        )
                    </li>
                    <li>
                        <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left;" value="Save" type="submit">
                    </li>
                </ul>
            </form>
        </text>)
                .Visible(false)
                .Modal(true)
                .Draggable()
                .Resizable()
                .Width(600)
                .Height(500)
                .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                .Events(ev => ev.Close("onClose"))
    )


    @*DETAIL*@
    @(Html.Kendo().Window()
        .Name("detail")
        .Title("Detail Role")
        .Content(

        @<text>
            <ul class="fieldlist">

                <li>
                    @Html.Label("Nama Role")
                    @Html.Kendo().TextBoxFor(m => m.NamaRole).Enable(false).HtmlAttributes(new { style = "width: 100%;", placeholder = "No Ticket", required = "required", validationmessage = "Input No Ticket" })
                </li>

                <li>
                    @(Html.Kendo().Grid((IEnumerable<Sparepart.Models.aks>)ViewBag.Akses) //Bind the grid to ViewBag.Products
                        .Name("DetailGrid")
                        .Columns(columns =>
                        {
                                    columns.ForeignKey(p => p.AksesID, (System.Collections.IEnumerable)ViewData["Menu"], "AksesID", "NamaMenu")
                        .Title("Menu").Width(200);
                                })
                        .Sortable()
                        .Pageable(pageable => pageable
                        .Input(true)
                        .Numeric(true)
                        .PageSizes(true)
                        .Info(true)
                        .PreviousNext(true)
                        .Refresh(true)
                        .ButtonCount(5)
                        )
                    )
                </li>
            </ul>
        </text>)
                .Visible(false)
                .Modal(true)
                .Draggable()
                .Resizable()
                .Width(600)
                .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                .Events(ev => ev.Close("onClose"))
    )

    @*CREATE*@
    @(Html.Kendo().Window()
        .Name("window")
        .Title("Tambahkan Role")
        .Content(
        
        @<text>
            <form action="/Access/CreateAccess" method="post" id="CreateFrm" onsubmit="return check (this)">
                <ul class="fieldlist">
                    @Html.AntiForgeryToken()
                    <li>
                        @Html.Label("Nama Role")
                        @Html.Kendo().TextBoxFor(m => m.NamaRole).Name("rolename").HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Role", required = "required", validationmessage = "Input Role" , id="rolename"})
                    </li>
                    <li>
                        @(Html.Kendo().Grid<Sparepart.Models.hakaks>()

                                            .Name("CreateGrid")
                                            .Columns(columns =>
                                            {
                                                                    columns.Bound(p => p.AksesID)
                                            .HeaderTemplate("<input id='checkAllCreate' class='chkbx' type='checkbox'/>")
                                            .ClientTemplate("<input id='checkItem' class='chkbxq' type='checkbox' name = 'AksesIDs' value = '#= AksesID #'/>")
                                            .Sortable(false)
                                            .Filterable(false)
                                            .Width(30);
                                                                    columns.Bound(p => p.NamaMenu).Width(140);
                                                                })
                                            .ToolBar(toolbar =>
                                            {
                                                                    toolbar.Template("Pilih Akses");
                                                                }
                                            )
                                            .Sortable()
                                            .Scrollable()
                                            .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Model(model => model.Id(p => p.AksesID))
                                            .Read(read => read.Action("Access_Read", "Access"))
                                            )

                        )
                    </li>
                    <li>
                        <input class="k-button k-primary" style="margin-top: 2em; float: left;" value="Save" type="submit">
                    </li>
                </ul>
            </form>
        </text>)
                                            .Visible(false)
                                            .Modal(true)
                                            .Draggable()
                                            .Resizable()
                                            .Width(600)
                                            .Height(500)
                                            .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                            .Events(ev => ev.Close("onClose"))
    )

    @(Html.Kendo().Grid<Sparepart.Models.masterrole>()

                                .Name("MasterGrid")
                                .Columns(columns =>
                                {
                                    columns.Bound(m => m.NamaRole);
                                    columns.Command(commands =>
                                    {
                                        commands.Custom("Delete").Click("openWindow");
                                        commands.Custom("Detail").Click("ShowDetails");
                                        commands.Custom("Edit").Click("EditColumn");
                                    }).Title("Commands").Width(300);
                                })
                                .ToolBar(toolbar =>
                                {
                                    toolbar.Template(@<text>@(Html.Kendo().Button()
                                    .Name("textButton")
                                    .HtmlAttributes(new { type = "button" })
                                    .Content("Tambahkan Role")) </text>);
                                        }
                                    )
                                    .Sortable()
                                    .Pageable(pageable => pageable
                                    .Input(true)
                                    .Numeric(true)
                                    .PageSizes(true)
                                    .Info(true)
                                    .PreviousNext(true)
                                    .Refresh(true)
                                    .ButtonCount(5)
                                    )
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(10)
                                    .Model(model => model.Id(p => p.RoleID))
                                    .Read(read => read.Action("Roles_Read", "Role"))
                                    )

    )

</section>

<style>
    .fieldlist {
        margin: 0 0 -2em;
        padding: 0;
    }

        .fieldlist li {
            list-style: none;
            padding-bottom: 2em;
        }

        .fieldlist label {
            display: block;
            padding-bottom: 1em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }
</style>

@section Scripts
{
    <script type="text/javascript">
        $("#CreateFrm").kendoValidator({
            messages: {
                custom: function (input) {
                    return $(input).parents().find('label').text();
                }
            },
            rules: {
                custom: function (input) {
                    if (input.is("[data-role=dropdownlist]")) {

                        var ddVal = $('input[data-role=dropdownlist]').data('kendoDropDownList').value();
                        if (ddVal !== "" && ddVal !== "label") {
                            return true;
                        } else {
                            return false
                        }
                    }
                    return true
                }
            }
        });

        $("#EditFrm").kendoValidator({
            messages: {
                custom: function (input) {
                    return $(input).parents().find('label').text();
                }
            },
            rules: {
                custom: function (input) {
                    if (input.is("[data-role=dropdownlist]")) {

                        var ddVal = $('input[data-role=dropdownlist]').data('kendoDropDownList').value();
                        if (ddVal !== "" && ddVal !== "label") {
                            return true;
                        } else {
                            return false
                        }
                    }
                    return true
                }
            }
        });

        function check(f) {
            var e, i = 0, checked = false;
            while (e = f.elements[i++]) { if (e.type == 'checkbox' && e.checked) checked = true };
            if (!checked) alert('Silahkan centang salah satu menu.');
            return checked;
        }

        //lanjut sini
        $(document).ready(function () {
        // process the form
            $('#CreateFrm').submit(function (event) {
                var model = {
                    NamaRole: $("#rolename").val(),
                };
                var AksesIDs = [];
                $("input:checked").each(function () {
                    AksesIDs = AksesIDs.push($(this).val());
                });
            var token = $('input[name=__RequestVerificationToken]').val();
                $.ajax({
                    type: "post",
                    url: '@Url.Action("CreateAccess", "Access")',
                    dataType: "json",
                    headers: {
                        "__RequestVerificationToken": token
                    },
                    data: JSON.stringify({ AksesIDs: AksesIDs, role: model }),
                    contentType: "application/json",

        success: function (response) {
            if (response.success) {
                alert(response.responseText);
                location.reload(true);
            } else {
                // DoSomethingElse()
                alert(response.responseText);
                location.reload(true);
            }
        },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
    });
            
            // stop the form from submitting the normal way and refreshing the page
            event.preventDefault();
        });

    });

        $(function () {
            $("#window").data("kendoWindow").close();
            $("#detail").data("kendoWindow").close().center();
            $("#update").data("kendoWindow").close();
        });

        function onClose() {
            $("#textButton").show();
            $("#ShowDetails").show();
            $("#EditColumn").show();
        }

        $(document).ready(function () {
            $("#textButton").bind("click", function () {
                $("#window").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
        });

        $("#checkAllCreate").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });

        $("#checkAllEdit").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });

        function ShowDetails(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#MasterGrid").data("kendoGrid");
            var datsa = grid.dataItem(row);
            var pId = datsa.RoleID;



            var myWin = $("#detail").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Detail Role",
                content: {
                    url: '@Url.Action("RoleDetail", "Window")',
                    data: { RoleID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function EditColumn(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#MasterGrid").data("kendoGrid");
            var datsa = grid.dataItem(row);
            var pId = datsa.RoleID;



            var myWin = $("#update").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Update Role",
                content: {
                    url: '@Url.Action("RoleEdit", "Window")',
                    data: { RoleID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function onGridDataBound(e) {
            $('#masterrole script').appendTo(document.body);
            $('#masterakses script').appendTo(document.body);
        }

        var wnd;
    $(document).ready(function () {
        wnd = $("#modalWindow").kendoWindow({
            title: "confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });

    function openWindow(e) {
            e.preventDefault();
        
            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            wnd.center().open();

            $("#yes").click(function () {
                var selrow = $(e.target).closest("tr");
                var selgrid = $("#MasterGrid").data("kendoGrid");
                var seldata = selgrid.dataItem(selrow);
                var pId = seldata.RoleID;
                $.ajax({
                    url: '@Url.Action("Destroy", "Access")',
                    data: { RoleID: pId },
                    type: "post",
                    dataType: "json",
                    //contentType: "application/json; charset=utf-8",

                    success: function (response) {
                        if (response.success) {
                            alert(response.responseText);
                            location.reload(true);
                        } else {
                            // DoSomethingElse()
                            alert(response.responseText);
                            location.reload(true);
                        }
                    },
                    error: function (response) {
                        alert("error!");  // 
                    }
                });
                grid.removeRow(row);
                wnd.close();
            });

            $("#no").click(function () {
                wnd.close();
            });
        }
    </script>
}
