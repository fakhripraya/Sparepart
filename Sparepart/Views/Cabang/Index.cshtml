@model Sparepart.Models.CreateCabangViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Master Cabang
    </h1>
</section>

<section class="content container-fluid">

    <div id="modalWindow">
        <h3 class="text-center">Delete this record?</h3>
        <div class="pull-left">
            <button id="yes" class="k-button">Yes</button>
        </div>
        <div class="pull-right">
            <button id="no" class="k-button">No</button>
        </div>
    </div>

    @*UPDATE*@
    @(Html.Kendo().Window()
            .Name("update")
            .Title("Edit Cabang")
            .Content(

            @<text>
                <form action="/Cabang/Update" method="post" id="EditFrm">
                        <ul class="fieldlist">
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.CabangID)
                            <li>
                                @Html.Label("Nama Cabang")
                                @Html.Kendo().TextBoxFor(m => m.NamaCabang).HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Cabang", required = "required", validationmessage = "Input Cabang" })
                            </li>
                            <li>
                                @Html.Label("Toko")
                                @(Html.Kendo().DropDownListFor(m => m.Toko)
                                        .Name("toko")
                                        .DataTextField("NamaToko")
                                        .DataValueField("TokoID")
                                        .Filter(FilterType.Contains)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                    {
                                            read.Action("GetToko", "Toko")
                                    .Data("tokodata");
                                        });
                                        })
                                )
                            </li>
                            <li>
                                @Html.Label("Unit")
                                @(Html.Kendo().DropDownListFor(m => m.Unit)
                                        .Name("unit")
                                        .DataTextField("NamaUnit")
                                        .DataValueField("UnitID")
                                        .Filter(FilterType.Contains)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                    {
                                            read.Action("GetUnit", "Unit")
                                    .Data("unitdata");
                                        });
                                        })
                                )
                            </li>
                            <li>
                                <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left;" value="Save" type="submit">
                            </li>
                        </ul>
                    </form>
            </text>)
                .Visible(false)
                .Draggable()
                .Resizable()
                .Width(600)
                .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                .Events(ev => ev.Close("onClose"))
    )


    @*CREATE*@
    @(Html.Kendo().Window()
            .Name("window")
            .Title("Tambahkan Cabang")
            .Content(

            @<text>
                <form action="/Cabang/Create" method="post" id="CreateFrm">
                    <ul class="fieldlist">
                        @Html.AntiForgeryToken()
                        <li>
                            @Html.Label("Nama Cabang")
                            @Html.Kendo().TextBoxFor(m => m.NamaCabang).HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Cabang", required = "required", validationmessage = "Input Cabang" })
                        </li>
                        <li>
                            @Html.Label("Toko")
                            @(Html.Kendo().DropDownListFor(m => m.Toko)
                                    .Name("toko")
                                    .DataTextField("NamaToko")
                                    .DataValueField("TokoID")
                                    .OptionLabel("Select Toko")
                                    .HtmlAttributes(new { style = "width: 250px", required = "required", validationmessage = "Select Toko" })
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetToko", "Toko")
                                    .Data("tokodata");
                                        });
                                    })
                            )
                        </li>
                        <li>
                            @Html.Label("Unit")
                            @(Html.Kendo().DropDownListFor(m => m.Unit)
                                    .Name("unit")
                                    .DataTextField("NamaUnit")
                                    .DataValueField("UnitID")
                                    .OptionLabel("Select Unit")
                                    .HtmlAttributes(new { style = "width: 250px", required = "required", validationmessage = "Select Unit" })
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetUnit", "Unit")
                                    .Data("unitdata");
                                        });
                                    })
                            )
                        </li>
                        <li>
                            <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left;" value="Save" type="submit">
                        </li>
                    </ul>
                </form>

            </text>)
                .Visible(false)
                .Modal(true)
                .Draggable()
                .Resizable()
                .Width(600)
                .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                .Events(ev => ev.Close("onClose"))
    )

    @*GRID*@
    @(Html.Kendo().Grid<Sparepart.Models.mastercabang>()

                .Name("Grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.CabangID).Visible(false);
                    columns.Bound(p => p.NamaCabang);
                    columns.ForeignKey(p => p.UnitID, (System.Collections.IEnumerable)ViewData["Unit"], "UnitID", "NamaUnit")
                    .Title("Unit").Width(200);
                    columns.ForeignKey(p => p.TokoID, (System.Collections.IEnumerable)ViewData["Toko"], "TokoID", "NamaToko")
                    .Title("Toko").Width(200);
                    columns.Command(commands =>
        {
                    commands.Custom("Edit").Click("Updatebtn");
                    commands.Custom("Delete").Click("openWindow");
                }).Title("Commands").Width(200);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template(@<text>@(Html.Kendo().Button()
                    .Name("textButton")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Tambahkan Cabang")) </text>);
                }
                        )
                        .Sortable()
                        .Pageable(pageable => pageable
                        .Input(true)
                        .Numeric(true)
                        .Info(true)
                        .PreviousNext(true)
                        .Refresh(true)
                        .ButtonCount(5)
                        )
                        .Filterable()
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Events(events => events
                        .Error("grid_error")
                        )
                        .Read(read => read.Action("Read", "Cabang"))
                        .ServerOperation(false)
                        .Model(model =>
                        {
                            model.Id(u => u.CabangID);
                            model.Field(u => u.CabangID).Editable(false);
                        })
                        )

    )

</section>

<style>
    .fieldlist {
        margin: 0 0 -2em;
        padding: 0;
    }

        .fieldlist li {
            list-style: none;
            padding-bottom: 2em;
        }

        .fieldlist label {
            display: block;
            padding-bottom: 1em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }
</style>

@section Scripts
{
    <script type="text/javascript">
        $("#CreateFrm").kendoValidator({
            messages: {
                custom: function (input) {
                    return $(input).parents().find('label').text();
                }
            },
            rules: {
                custom: function (input) {
                    if (input.is("[data-role=dropdownlist]")) {

                        var ddVal = $('input[data-role=dropdownlist]').data('kendoDropDownList').value();
                        if (ddVal !== "" && ddVal !== "label") {
                            return true;
                        } else {
                            return false
                        }
                    }
                    return true
                }
            }
        });

        $("#EditFrm").kendoValidator({
            messages: {
                custom: function (input) {
                    return $(input).parents().find('label').text();
                }
            },
            rules: {
                custom: function (input) {
                    if (input.is("[data-role=dropdownlist]")) {

                        var ddVal = $('input[data-role=dropdownlist]').data('kendoDropDownList').value();
                        if (ddVal !== "" && ddVal !== "label") {
                            return true;
                        } else {
                            return false
                        }
                    }
                    return true
                }
            }
        });
        function grid_error(e) {
            if (e.errors) {
                var message = "There are some errors:\n";
                // Create a message containing all errors.
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                // Display the message.
                alert(message);
                // Cancel the changes.
                var grid = $("#Grid").data("kendoGrid");
                grid.cancelChanges();
            }
        }


        $(function () {
            $("#window").data("kendoWindow").close();
            $("#update").data("kendoWindow").close();
        });

        function onClose() {
            $("#textButton").show();
            $("#update").show();
        }

        $(document).ready(function () {
            $("#textButton").bind("click", function () {
                $("#window").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
        });

        function Updatebtn(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#Grid").data("kendoGrid");
            var datsa = grid.dataItem(row);
            var pId = datsa.CabangID;
            


            var myWin = $("#update").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Edit Cabang",
                content: {
                    url: '@Url.Action("CabangEdit", "Window")',
                    data: { CabangID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function tokodata() {
            return {
                text: $("#toko").data("kendoDropDownList").filterInput.val()
            };
        }
        function unitdata() {
            return {
                text: $("#unit").data("kendoDropDownList").filterInput.val()
            };
        }

        function onGridDataBound(e) {
            $('#mastertoko script').appendTo(document.body);
            $('#masterunit script').appendTo(document.body);
        }

        var wnd;
        $(document).ready(function () {
            wnd = $("#modalWindow").kendoWindow({
                title: "confirmation",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");
        });

        function openWindow(e) {
            e.preventDefault();

            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            wnd.center().open();

            $("#yes").click(function () {
                var selrow = $(e.target).closest("tr");
                var selgrid = $("#Grid").data("kendoGrid");
                var seldata = selgrid.dataItem(selrow);
                var pId = seldata.CabangID;
                $.ajax({
                    url: '@Url.Action("Destroy", "Cabang")',
                    data: { CabangID: pId },
                    type: "post"
                });
                grid.removeRow(row);
                wnd.close();
            });

            $("#no").click(function () {
                wnd.close();
            });
        }

    </script>

    <script type="text/x-kendo-template" id="template">
        <div id="details-container">

        </div>
    </script>
}