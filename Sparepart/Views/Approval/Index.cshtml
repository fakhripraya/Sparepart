@model Sparepart.Models.mastertoko
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@*CREATE*@
@(Html.Kendo().Window()
                                        .Name("window")
                                        .Title("Tambahkan Toko")
                                        .Content(

                                        @<text>
                                            <form onsubmit="return Submiting()" method="post" id="CreateFrm">
                                                <ul class="fieldlist">
                                                    @Html.AntiForgeryToken()
                                                    <li>
                                                        @Html.Label("Nama Toko")
                                                        @Html.Kendo().TextBoxFor(m => m.NamaToko).Name("NamaToko").HtmlAttributes(new { style = "width: 100%;", placeholder = "Nama Toko", required = "required", validationmessage = "Input Alamat", id = "CreateNamaToko" })
                                                    </li>
                                                    <li>
                                                        @Html.Label("Alamat Toko")
                                                        @Html.Kendo().TextBoxFor(m => m.AlamatToko).Name("AlamatToko").HtmlAttributes(new { style = "width: 100%;", placeholder = "Alamat Toko", required = "required", validationmessage = "Input Alamat", id = "CreateAlamatToko" })
                                                    </li>
                                                    <li>
                                                        <input class="k-button k-primary" style="margin-top: 2em; float: left;" value="Save" type="submit">
                                                    </li>
                                                </ul>
                                            </form>
                                        </text>)
                                                .Visible(false)
                                                .Modal(true)
                                                .Draggable()
                                                .Resizable()
                                                .Width(600)
                                                .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                .Events(ev => ev.Close("onClose"))
    )

                                            <style>
                                                .fieldlist {
                                                    margin: 0 0 -2em;
                                                    padding: 0;
                                                }

                                                    .fieldlist li {
                                                        list-style: none;
                                                        padding-bottom: 2em;
                                                    }

                                                    .fieldlist label {
                                                        display: block;
                                                        padding-bottom: 1em;
                                                        font-weight: bold;
                                                        text-transform: uppercase;
                                                        font-size: 12px;
                                                        color: #444;
                                                    }
                                            </style>

    @*@(Html.Kendo().Grid<Sparepart.Models.mastertoko>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(u => u.NamaToko).Width(100);
                    columns.Bound(u => u.AlamatToko).Width(100);
                    columns.Bound(u => u.UserInput).Visible(false);
                    columns.Bound(u => u.TanggalInput).Visible(false);
                    columns.Bound(u => u.UserUpdate).Visible(false);
                    columns.Bound(u => u.TanggalUpdate).Visible(false);
                    columns.Bound(u => u.IsDelete).Visible(false);
                    columns.Command(commands =>
                    {
                        commands.Custom("Edit").Click("Updatebtn");
                        commands.Custom("Delete").Click("openWindow");

                    }).Title("Commands").Width(200);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template(@<text>@(Html.Kendo().Button()
    .Name("textButton")
    .HtmlAttributes(new { type = "button" })
    .Content("Tambahkan Toko")) </text>);
                        }
                                        )
                                .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                .Sortable()
                                .Pageable(pageable => pageable
                                    .Input(true)
                                    .Numeric(true)
                                    .Info(true)
                                    .PreviousNext(true)
                                    .Refresh(true)
                                    .ButtonCount(5)
                                    )
                                    .Filterable()
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Events(events => events
                                    .Error("grid_error")
                                    )
                                    .Read(read => read.Action("Toko_Read", "Toko"))
                                    .PageSize(10)
                                    .ServerOperation(false)
                                    .Model(model =>
                                    {
                                        model.Id(u => u.TokoID);
                                        model.Field(u => u.TokoID).Editable(false);
                                    })
                                    .Destroy(destroy => destroy.Action("Toko_Destroy", "Toko"))
                                )

    )*@
    @*<script>
        $(function () {
            $("#window").data("kendoWindow").close();
            //$("#update").data("kendoWindow").close();
        });

        function onClose() {
            $("#textButton").show();
            //$("#update").show();
        }

        $(document).ready(function () {
            $("#textButton").bind("click", function () {
                $("#window").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
        });

        $('#CreateFrm').submit(function (event) {
                var model = {
                    UserName: $("#CreateNamaToko").val(),
                    NamaUser: $("#CreateAlamatToko").val(),
                };
                var token = $('input[name=__RequestVerificationToken]').val();
                $.ajax({
                    type: "post",
                    headers: {
                        "__RequestVerificationToken": token
                    },
                    data: JSON.stringify(model),
                    url: '@Url.Action("Register", "Account")',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",

            success: function (response) {
                if (response.success) {
                    alert(response.responseText);
                    location.reload(true);
                } else {
                    alert(response.responseText);
                    location.reload(true);
                }
            },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                }
        });
                event.preventDefault();
            });

        });
    </script>*@

<div id="example">
    <div id="grid"></div>
    <script>
        //var options = [
        //        {
        //            "size": "XL",
        //            "color": "Pink",
        //            "roles": [{ "role1": "TEST1" }, { "role2": "Test2" }, { "role3": "Test3" }]
        //        },
        //        {
        //            "size": "XXL",
        //            "color": "Black",
        //            "roles": [{ "role1": "TEST1" }, { "role2": "Test2" }, { "role3": "Test3" }]
        //        }
        //]

        var options = []

        function Submiting() {
            var DataArray = new Array();
            DataArray["NamaToko"] = document.getElementById('CreateNamaToko').value;
            DataArray["AlamatToko"] = document.getElementById('CreateAlamatToko').value;
            options.push(DataArray);
            console.log(options);
            return false;
        }

        function onClose() {
            $("#Add").show();
            //$("#update").show();
        }

        //$(document).ready(function () {
        //    $("#Add").bind("click", function () {
        //        $("#window").data("kendoWindow").open().center();
        //        //$("#textButton").hide();
        //    });
        //});

        function toolbar_click() {
            $("#window").data("kendoWindow").open().center();
                //$("#textButton").hide();
        }

        $(document).ready(function () {
            $("#grid").kendoGrid({
                dataSource: {
                    data: options,
                    schema: {
                        model: {
                            fields: {
                                size: { type: "string" },
                                color: { type: "string" }
                            }
                        }
                    },
                    pageSize: 10
                },
                height: 550,
                groupable: true,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                toolbar: [
                    {
                        template: '<a class="k-button" href="\\#" onclick="return toolbar_click()">Tambah Baru</a>'
                    }
                ],
                columns: [{
                        field: "UserName",
                        title: "Username"
                    },{
                        field: "NamaUser",
                        title: "Namauser"
                    }]
            });
        });
    </script>
</div>

<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>