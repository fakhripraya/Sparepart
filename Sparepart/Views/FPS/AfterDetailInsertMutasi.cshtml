
@model Sparepart.Models.fpsheader
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Permintaan Sparepart
    </h1>
</section>

<section class="content container-fluid">

    <div id="modalWindow">
        <h3 class="text-center">Delete this record?</h3>
        <div class="pull-left">
            <button id="yes" class="k-button">Yes</button>
        </div>
        <div class="pull-right">
            <button id="no" class="k-button">No</button>
        </div>
    </div>

    @(Html.Kendo().Window()
            .Name("detailMutasi")
            .Title("Add Item - Mutasi")
            .Content(

            @<text>

            </text>)
                                                                        .Visible(false)
                                                                        .Draggable()
                                                                        .Resizable()
                                                                        .Width(500)
                                                                        .Height(400)
                                                                        .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                                        .Events(ev => ev.Close("onClose"))
    )

    @(Html.Kendo().Window()
            .Name("detailPerbaikan")
            .Title("Add Item - Perbaikan")
            .Content(

            @<text>

            </text>)
                                                                        .Visible(false)
                                                                        .Draggable()
                                                                        .Resizable()
                                                                        .Width(500)
                                                                        .Height(400)
                                                                        .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                                        .Events(ev => ev.Close("onClose"))
    )

    @*UPDATE*@
    @(Html.Kendo().Window()
            .Name("updatefpsMutasi")
            .Title("Edit Permintaan - Mutasi")
            .Content(

            @<text>

            </text>)
                                                                        .Visible(false)
                                                                        .Draggable()
                                                                        .Resizable()
                                                                        .Width(600)
                                                                        .Height(600)
                                                                        .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                                        .Events(ev => ev.Close("onClose"))
    )

    @*DETAIL*@
    @(Html.Kendo().Window()
            .Name("detailfps")
            .Title("Detail Permintaan Sparepart")
            .Content(

            @<text>

            </text>)
                                                                        .Visible(false)
                                                                        .Draggable()
                                                                        .Resizable()
                                                                        .Width(600)
                                                                        .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                                        .Events(ev => ev.Close("onClose"))
    )


    @*CREATE - perbaikan*@
    @(Html.Kendo().Window()
        .Name("windowPerbaikan")
        .Title("Tambah Permintaan - Perbaikan")
        .Content(

        @<text>
            <form action="/FPS/Create_Perbaikan" method="post">
                <ul class="fieldlist">
                    @Html.AntiForgeryToken()
                    <li>
                        @Html.Label("No Ticket")
                        @Html.Kendo().TextBoxFor(m => m.NoTicket).HtmlAttributes(new { style = "width: 100%;", placeholder = "No Ticket", required = "required", validationmessage = "Input No Ticket" })
                    </li>
                    <li>
                        @Html.Label("Nama Pemohon")
                        @Html.Kendo().TextBoxFor(m => m.NamaPemohon).HtmlAttributes(new { style = "width: 100%;", placeholder = "Pemohon", required = "required", validationmessage = "Input Pemohon" })
                    </li>
                    <li>
                        @Html.Label("NIK Pemohon")
                        @Html.Kendo().TextBoxFor(m => m.NIKPemohon).HtmlAttributes(new { style = "width: 100%;", placeholder = "NIK Pemohon", required = "required", validationmessage = "Input NIK Pemohon" })
                    </li>
                    <li>
                        @Html.Label("Toko")
                        @(Html.Kendo().DropDownListFor(m => m.TokoID)
                                            .Name("toko")
                                            .DataTextField("NamaToko")
                                            .DataValueField("TokoID")
                                            .Filter(FilterType.Contains)
                                            .DataSource(source =>
                                            {
                                                        source.Read(read =>
{
                                        read.Action("GetToko", "Toko")
                            .Data("tokodata");
                                    });
                                                    })
                        )
                    </li>
                    <li>
                        @(Html.Kendo().Grid<Sparepart.Models.fpsdetail>()
                                                .Name("detailgridPerbaikan")
                                                .Columns(columns =>
                                                {
                                                            columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "BarangPLU")
.Title("PLU");
                                                            columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "NamaBarang")
.Title("Barang");
                                                            columns.ForeignKey(p => p.SatuanID, (System.Collections.IEnumerable)ViewData["Satuan"], "SatuanID", "NamaSatuan")
.Title("Satuan");
                                                            columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "HargaSatuan")
.Title("Harga Satuan");
                                                            columns.Bound(p => p.Qty).Width(100);
                                                            columns.Bound(p => p.Keterangan).Width(100);

                                                            columns.Command(commands =>
{
                            //commands.Edit();
                            commands.Destroy();

                                    }).Title("Commands").Width(200);
                                                        })
                                        .ToolBar(toolbar =>
                                        {
                                                    toolbar.Template("<a class='k-button k-button-icontext' onclick='DetailWindowPerbaikan()' href='#'></span>Add Item</a>");
                                                }
                                    )
                                        .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                        .Sortable()
                                        .Pageable(pageable => pageable
                                        .Input(true)
                                        .Numeric(true)
                                        .Info(true)
                                        .PreviousNext(true)
                                        .Refresh(true)
                                        .ButtonCount(5)
                                        )

                                        .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Events(events => events
                                        .Error("grid_error")
                                        )
                                        .Read(read => read.Action("Detail_Read", "FPS"))
                                        .PageSize(10)
                                        .ServerOperation(false)
                                        .Model(model =>
                                        {
                                                    model.Id(P => P.SeqFPSID);
                                                    model.Field(P => P.SeqFPSID).Editable(false);
                                                })
                                        //.Create(create => create.Action("Toko_Create", "Toko"))
                                        //.Update(update => update.Action("Toko_Update", "Toko"))
                                        .Destroy(destroy => destroy.Action("Detail_Destroy", "FPS"))
                                        )

                        )
                    </li>
                    <li class="pull-left">
                        <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left; padding-bottom: 5px;" value="Save" type="submit">
                    </li>
                    <li class="pull-right">
                        @*<input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: right; padding-bottom: 5px;" value="Cancel" type="button">*@
                        <a href="/FPS/Detail_Clear" class="k-button k-primary" style="margin-top: 2em; float: right; padding-bottom: 5px;">Cancel</a>
                    </li>
                </ul>
            </form>
        </text>)
                .Visible(false)
                .Modal(true)
                .Draggable()
                .Resizable()
                .Width(600)
                .Height(600)
                .Actions(actions => actions.Pin().Minimize().Maximize()/*.Close()*/)
                .Events(ev => ev.Close("onClose"))
    )

    @*CREATE - mutasi*@
    @(Html.Kendo().Window()
        .Name("windowMutasi")
        .Title("Tambah Permintaan - Mutasi")
        .Content(

        @<text>
            <form action="/FPS/Create_Mutasi" method="post">
                <ul class="fieldlist">
                    @Html.AntiForgeryToken()
                    <li>
                        @Html.Label("No Ticket")
                        @Html.Kendo().TextBoxFor(m => m.NoTicket).HtmlAttributes(new { style = "width: 100%;", placeholder = "No Ticket", required = "required", validationmessage = "Input No Ticket" })
                    </li>
                    <li>
                        @Html.Label("Nama Pemohon")
                        @Html.Kendo().TextBoxFor(m => m.NamaPemohon).HtmlAttributes(new { style = "width: 100%;", placeholder = "Pemohon", required = "required", validationmessage = "Input Pemohon" })
                    </li>
                    <li>
                        @Html.Label("NIK Pemohon")
                        @Html.Kendo().TextBoxFor(m => m.NIKPemohon).HtmlAttributes(new { style = "width: 100%;", placeholder = "NIK Pemohon", required = "required", validationmessage = "Input NIK Pemohon" })
                    </li>
                    <li>
                        @Html.Label("Unit")
                        @(Html.Kendo().DropDownListFor(m => m.UnitID)
                                                            .Name("unit")
                                                            .DataTextField("NamaUnit")
                                                            .DataValueField("UnitID")
                                                            .Filter(FilterType.Contains)
                                                            .DataSource(source =>
                                                            {
                                                                        source.Read(read =>
{
                                        read.Action("GetUnit", "Unit")
.Data("unitdata");
                                    });
                                                                    })
                        )
                    </li>
                    <li>
                        @Html.Label("Cabang")
                        @(Html.Kendo().DropDownListFor(m => m.TokoID)
                                                            .Name("cabang")
                                                            .DataTextField("NamaCabang")
                                                            .DataValueField("CabangID")
                                                            .Filter(FilterType.Contains)
                                                            .DataSource(source =>
                                                            {
                                                                        source.Read(read =>
{
                                        read.Action("GetCabang", "Cabang")
.Data("cabangdata");
                                    });
                                                                    })
                        )
                    </li>
                    <li>
                        @(Html.Kendo().Grid<Sparepart.Models.DetailPermintaanBarangViewModel>()
                            .Name("detailgridMutasi")
                            .Columns(columns =>
                            {
                                        columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "BarangPLU")
                                        .Title("PLU");
                                        columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "NamaBarang")
                                        .Title("Barang");
                                        columns.ForeignKey(p => p.SatuanID, (System.Collections.IEnumerable)ViewData["Satuan"], "SatuanID", "NamaSatuan")
                                        .Title("Satuan");
                                        columns.ForeignKey(p => p.KodeBarangTipe, (System.Collections.IEnumerable)ViewData["Barang"], "KodeBarangTipe", "HargaSatuan")
                                        .Title("Harga Satuan");
                                        columns.Bound(p => p.Quantity);
                                        columns.Bound(p => p.JumlahHarga);
                                        columns.Bound(p => p.Keterangan);

                                        columns.Command(commands =>
                                        {
                                //commands.Edit();
                                commands.Destroy();

                                        }).Title("Commands");
                                    })
                                                                .ToolBar(toolbar =>
                                                                {
                                                                            toolbar.Template("<a class='k-button k-button-icontext' onclick='DetailWindowMutasi()' href='#'></span>Add Item</a>");
                                                                        }
                                                            )
                                                                .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                                                .Sortable()
                                                                .Pageable(pageable => pageable
                                                                .Input(true)
                                                                .Numeric(true)
                                                                .Info(true)
                                                                .PreviousNext(true)
                                                                .Refresh(true)
                                                                .ButtonCount(5)
                                                                )
                                                                .DataSource(dataSource => dataSource
                                                                .Ajax()
                                                                .Events(events => events
                                                                .Error("grid_error")
                                                                )
                                                                .Read(read => read.Action("Detail_Read", "FPS"))
                                                                .PageSize(10)
                                                                .ServerOperation(false)
                                                                .Model(model =>
                                                                {
                                                                            model.Id(P => P.SeqFPSID);
                                                                            model.Field(P => P.SeqFPSID).Editable(false);
                                                                        })
                                                                .Destroy(destroy => destroy.Action("Detail_Destroy", "FPS"))
                                                                )

                        )
                    </li>
                    <li class="pull-left">
                        <input class="k-button k-primary" name="submitButton" id="btnSave" style="margin-top: 2em; float: left; padding-bottom: 5px;" value="Save" type="submit">
                    </li>
                    <li class="pull-right">
                        <a href="/FPS/Detail_Clear" class="k-button k-primary" style="margin-top: 2em; float: right; padding-bottom: 5px;">Cancel</a>
                    </li>
                </ul>
            </form>
        </text>)
                                                            .Visible(false)
                                                            .Modal(true)
                                                            .Draggable()
                                                            .Resizable()
                                                            .Width(700)
                                                            .Height(600)
                                                            .Actions(actions => actions.Pin().Minimize().Maximize().Close())
                                                            .Events(ev => ev.Close("onClose"))
    )


    @*GRID*@
    @(Html.Kendo().Grid<Sparepart.Models.fpsheader>()

                .Name("Grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.FPSID).Visible(false);
                    columns.Bound(p => p.NoTicket);
                    columns.ForeignKey(p => p.CabangID, (System.Collections.IEnumerable)ViewData["Cabang"], "CabangID", "NamaCabang")
                    .Title("Cabang").Width(200);
                    columns.ForeignKey(p => p.UnitID, (System.Collections.IEnumerable)ViewData["Unit"], "UnitID", "NamaUnit")
                    .Title("Unit").Width(200);
                    columns.ForeignKey(p => p.TokoID, (System.Collections.IEnumerable)ViewData["Toko"], "TokoID", "NamaToko")
                    .Title("Toko").Width(200);
                    columns.Bound(p => p.NamaPemohon);
                    columns.Bound(p => p.NIKPemohon);
                    columns.Bound(p => p.JenisFPS);
                    columns.Bound(p => p.Approval);
                    columns.Command(commands =>
        {
            commands.Custom("Edit").Click("Updatebtn");
            commands.Custom("Detail").Click("Detailbtn");
            commands.Custom("Delete").Click("openWindow");
        }).Title("Commands").Width(500);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Template("<a class='k-button k-button-icontext k-grid-add' href='#' id='crmutasi'>FPS - Mutasi</a><a class='k-button k-button-icontext k-grid-add' href='#' id='crperbaikan'>FPS - Perbaikan</a>");
                }
                                )
                                .Sortable()
                                .Pageable(pageable => pageable
                                .Input(true)
                                .Numeric(true)
                                .Info(true)
                                .PreviousNext(true)
                                .Refresh(true)
                                .ButtonCount(5)
                                )
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .Events(events => events
                                .Error("grid_error")
                                )
                                .Read(read => read.Action("Read", "FPS"))
                                .ServerOperation(false)
                                .Model(model =>
                                {
                                    model.Id(u => u.FPSID);
                                    model.Field(u => u.FPSID).Editable(false);
                                })
                                )

    )

</section>

<style>
    .fieldlist {
        margin: 0 0 -2em;
        padding: 0;
    }

        .fieldlist li {
            list-style: none;
            padding-bottom: 2em;
        }

        .fieldlist label {
            display: block;
            padding-bottom: 1em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }
</style>

@section Scripts
{
    <script type="text/javascript">

        function grid_error(e) {
            if (e.errors) {
                var message = "There are some errors:\n";
                // Create a message containing all errors.
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                // Display the message.
                alert(message);
                // Cancel the changes.
                var grid = $("#Grid").data("kendoGrid");
                grid.cancelChanges();
            }
        }


        function DetailWindowMutasi() {

            var myWin = $("#detailMutasi").kendoWindow({

                modal: false,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Add Item",
                content: {
                    url: '@Url.Action("FPSDetailMutasi", "Window")'
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
    }

    function DetailWindowPerbaikan() {

            var myWin = $("#detailPerbaikan").kendoWindow({

                modal: false,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Add Item",
                content: {
                    url: '@Url.Action("FPSDetailPerbaikan", "Window")'
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }



        $(function () {
            $("#windowMutasi").data("kendoWindow").open().center();
            $("#windowPerbaikan").data("kendoWindow").close();
            $("#updatefps").data("kendoWindow").close();
        });

        function onClose() {
            $("#crmutasi").show();
            $("#crperbaikan").show();
            $("#updateMutasi").show();
        }

        $(document).ready(function () {
            $("#crmutasi").bind("click", function () {
                $("#windowMutasi").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
            $("#crperbaikan").bind("click", function () {
                $("#windowPerbaikan").data("kendoWindow").open().center();
                //$("#textButton").hide();
            });
    });

        function Updatebtn(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#Grid").data("kendoGrid");
            var dat = grid.dataItem(row);
            var pId = dat.FPSID;



            var myWin = $("#updatefpsMutasi").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Edit FPS",
                content: {
                    url: '@Url.Action("FPSEdit", "Window")',
                    data: { FPSID: pId }
                }

            });
            myWin.data("kendoWindow").open().center();
            return false;
        }

        function Detailbtn(e) {
            e.preventDefault();
            var row = $(e.target).closest("tr");
            var grid = $("#Grid").data("kendoGrid");
            var dat = grid.dataItem(row);
            var pId = dat.FPSID;

            var myWin = $("#detailfps").kendoWindow({

                modal: true,
                width: "450px",
                height: "250px",
                resizable: true,
                position: {
                    top: 400,
                    left: 650
                },
                title: "Detail FPS",
                content: {
                    url: '@Url.Action("FPSDetail", "Window")',
                    data: { FPSID: pId }
                },
                refresh: function () { this.center(); }

            });
            myWin.data("kendoWindow").open();
            return false;
        }

        function tokodata() {
            return {
                text: $("#toko").data("kendoDropDownList").filterInput.val()
            };
        }
        function unitdata() {
            return {
                text: $("#unit").data("kendoDropDownList").filterInput.val()
            };
        }
        function cabangdata() {
            return {
                text: $("#cabang").data("kendoDropDownList").filterInput.val()
            };
        }
        function barangdata() {
            return {
                text: $("#barang").data("kendoDropDownList").filterInput.val()
            };
        }

        function onGridDataBound(e) {
            $('#mastertoko script').appendTo(document.body);
            $('#masterunit script').appendTo(document.body);
            $('#mastercabang script').appendTo(document.body);
            $('#masterbarang script').appendTo(document.body);
        }


        var wnd;
        $(document).ready(function () {
            wnd = $("#modalWindow").kendoWindow({
                title: "confirmation",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");
        });

        function openWindow(e) {
            e.preventDefault();

            var grid = this;
            var row = $(e.currentTarget).closest("tr");
            wnd.center().open();

            $("#yes").click(function () {
                var selrow = $(e.target).closest("tr");
                var selgrid = $("#Grid").data("kendoGrid");
                var seldata = selgrid.dataItem(selrow);
                var pId = seldata.FPSID;
                $.ajax({
                    url: '@Url.Action("Destroy", "FPS")',
                    data: { FPSID: pId },
                    type: "post"
                });
                grid.removeRow(row);
                wnd.close();
                window.location.reload(true);
            });

            $("#no").click(function () {
                wnd.close();
            });
        }

    </script>
}